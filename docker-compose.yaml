services:
  keycloak-db:
    image: postgres:latest
    restart: always
    container_name: keycloak_db
    environment:
      POSTGRES_USER: /run/secrets/db_user
      POSTGRES_PASSWORD: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - keycloak:/var/lib/postgresql

  movies-db:
    image: postgres:latest
    restart: always
    container_name: backend-db
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - movies:/var/lib/postgresql
      - ./secrets/postgresql:/docker-entrypoint-initdb.d

  keycloak:
    depends_on:
      - keycloak-db
    restart: always
    container_name: keycloak
    build: keycloak
    environment:
      JAVA_OPTS: '-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m'
      KC_DB: postgres
      KC_DB_URL: 'jdbc:postgresql://keycloak-db:5432/'
      KC_DB_USERNAME: /run/secrets/db_user
      KC_DB_PASSWORD: /run/secrets/db_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HOSTNAME_URL: "https://auth.orme.dev"
    secrets:
      - db_password
      - db_user
    ports:
      - 8081:8080

    command: start --proxy edge --import-realm --hostname-strict=false --hostname-strict-https=false --log-console-color=true --optimized

  nextjs:
    depends_on:
      - keycloak
    image: node:18
    container_name: frontend
    restart: always
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: true
    volumes:
      - ./next-frontend:/app
      - ./next-frontend/node_modules:/app/node_modules
      - ./next-frontend/.next:/app/.next
    working_dir: /app
    command: npm run dev
    extra_hosts:
      - "auth.orme.dev:172.17.0.1"

  nginx:
    depends_on:
      - nextjs
      - keycloak
    image: nginx:latest
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./secrets/nginx/nginx.conf:/etc/nginx/nginx.conf"
    secrets:
      - source: privkey
        target: privkey.pem
      - source: fullchain
        target: fullchain.pem

#TODO remove ports for prod
  redis-movies:
    restart: always
    container_name: backend-redis
    ports:
      - 6379:6379
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL


  spring-movies:
    container_name: backend
    depends_on:
      - movies-db
      - redis-movies
    image: docker.io/library/movie-resource-server:0.0.1-SNAPSHOT #TODO wtf ?
    restart: always
    volumes:
      - ./movie-resource-server:/app
      - ./secrets/ssl:/certificates
    working_dir: /app
    environment:
      USE_SYSTEM_CA_CERTS: 1
    ports:
      - 8080:8080
#    command: ./gradlew bootRun --no-daemon
    secrets:
      - tmdb_token


secrets:
  db_password:
    file: secrets/DBPASSWORD
  db_user:
    file: secrets/DBUSERNAME
  privkey:
    file: secrets/privkey.pem
  fullchain:
    file: secrets/fullchain.pem
  postgres_init:
    file: secrets/postgresql/init.sh
  tmdb_token:
    file: secrets/TMDB_TOKEN


volumes:
  movies:
  keycloak:
